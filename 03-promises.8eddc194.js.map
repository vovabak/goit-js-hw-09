{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgDA,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGlBM,EAAO,CAACP,WAAUC,YAErBA,OA3DM,CACXQ,KAAMC,SAASC,cAAc,SAC7BV,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,UAAWJ,SAASC,cAAc,qBAG/BF,KAAKM,iBAAiB,UAG3B,SAAkBC,GAChBA,EAAEC,iBAMF,IALA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBjB,MAAOW,EAAiBM,EAAjBN,KAAMC,EAAWK,EAAXL,OAEjBS,EAAaC,OAAOF,EAAMG,OACxBC,EAAWF,OAAOX,EAAKY,OAEpBE,EAAI,EAAGA,GAAKH,OAAOV,EAAOW,OAAQE,IAEzC3B,EAAc2B,EAAGJ,GACdK,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,MAC5D,CACAD,SAAU,YACViC,SAAU,OACVC,SAAU,YAIrBC,OAAM,SAAAP,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAhC,GAASiC,OAAOM,QAAQ,sBAAqCJ,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,MAC3D,CACED,SAAU,YACViC,SAAU,OACVC,SAAU,YAKxBZ,GAAcG,EAGhBT,EAAEG,cAAckB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;  \n\n  let inputDelay = Number(delay.value);\n  const interval = Number(step.value);  \n  \n  for (let i = 1; i <= Number(amount.value); i++) {\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,\n                {                  \n                  position: 'right-top',\n                  distance: '20px',\n                  fontSize: '21px',\n                }         \n        );        \n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n                {                  \n                  position: 'right-top',\n                  distance: '20px',\n                  fontSize: '21px',\n                },\n        );        \n      });\n    \n    inputDelay += interval;    \n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) { \n\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        \n        } else {\n          reject({position, delay});\n        }\n    }, delay)\n    \n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","step","amount","submitBtn","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","inputDelay","Number","value","interval","i","then","param","$parcel$interopDefault","Notify","success","concat","distance","fontSize","catch","failure","reset"],"version":3,"file":"03-promises.8eddc194.js.map"}