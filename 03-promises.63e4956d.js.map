{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoDA,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGlBM,EAAO,CAACP,WAAUC,YAErBA,OA/DM,CACXQ,KAAMC,SAASC,cAAc,SAC7BV,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,UAAWJ,SAASC,cAAc,qBAG/BF,KAAKM,iBAAiB,UAG3B,SAAkBC,GAChBA,EAAEC,iBAOF,IANA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBjB,MAAOW,EAAiBM,EAAjBN,KAAMC,EAAWK,EAAXL,OAEjBS,EAAW,EACXC,EAAaC,OAAOH,EAAMI,OACxBC,EAAWF,OAAOZ,EAAKa,OAEpBE,EAAI,EAAGA,EAAIH,OAAOX,EAAOY,OAAQE,IAIxC5B,EAFAuB,GAAY,EAEYC,GACrBK,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,MAC5D,CACEiC,QAASX,EACTvB,SAAU,YACVmC,SAAU,OACVC,SAAU,YAIvBC,OAAM,SAAAR,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOO,QAAQ,sBAAqCL,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,MAC3D,CACIiC,QAASX,EACTvB,SAAU,YACVmC,SAAU,OACVC,SAAU,YAK1Bb,GAAcG,EAEhBV,EAAEG,cAAcoB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;  \n\n  let position = 0;\n  let inputDelay = Number(delay.value);\n  const interval = Number(step.value);\n  \n  for (let i = 0; i < Number(amount.value); i++) {\n    \n    position += 1;\n\n    createPromise(position, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,\n                {\n                    timeout: inputDelay,\n                    position: 'right-top',\n                    distance: '20px',\n                    fontSize: '21px',\n                }         \n            );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n                {\n                    timeout: inputDelay,\n                    position: 'right-top',\n                    distance: '20px',\n                    fontSize: '21px',\n                }         \n            );        \n      });\n    \n    inputDelay += interval;    \n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) { \n\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        \n        } else {\n          reject({position, delay});\n        }\n    }, delay)\n    \n  });\n}\n\n\n  \n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","step","amount","submitBtn","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","position1","inputDelay","Number","value","interval","i","then","param","$parcel$interopDefault","Notify","success","concat","timeout","distance","fontSize","catch","failure","reset"],"version":3,"file":"03-promises.63e4956d.js.map"}